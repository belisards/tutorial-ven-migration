---
title: "Venezolanos en Chile, Colombia, Ecuador y Perú"
lang: es
format: 
  html:
    toc: true
    embed-resources: true
    toc_float: true
    code-tools: true
---

Una guía paso a paso, utilizando R para analizar estadísticas de las poblaciones anfitrionas y venezolanos en Chile, Colombia, Ecuador y Perú.

# Introducción

El informe del Banco Mundial - [Venezolanos en Chile, Colombia, Ecuador y Perú](https://www.jointdatacenter.org/venezuela-migration-report/) - proporciona un perfil socioeconómico detallado de los venezolanos en estos cuatro países para ayudar a guiar la respuesta política e institucional. El estudio utiliza datos oficiales de varias encuestas que cubren la población adulta (18 años o más) de residentes venezolanos y nacionales. El Centro Conjunto de Datos sobre Desplazamiento Forzado del Banco Mundial-ACNUR apoyó la recolección de datos y elaboración del estudio y ha creado esta guía para ayudar a procesar los datos para sus propios fines.

# Fuentes de datos

Las siguientes encuestas se compilan en cuatro archivos de tabla CSV, uno por país, que se limpian y armonizan. Es decir, tienen una estructura similar y tienen los mismos nombres de variables y valores.

| [Country]{.underline} | [Survey]{.underline}                                                                  | [Modality]{.underline} |
|---------------|------------------------------------------|---------------|
| **Chile**             | Encuesta de Migración                                                                 | Teléfono               |
| **Chile**             | Encuesta Laboral                                                                      | Personalmente          |
| **Colombia**          | Gran Encuesta Integrada de Hogares (GEIH)                                             | Personalmente          |
| **Colombia**          | Pulso de la Migración (Ronda 4)                                                       | Teléfono               |
| **Ecuador**           | Encuesta a Personas en Movilidad Humana y en Comunidades Receptoras en Ecuador (EPEC) | Personalmente          |
| **Ecuador**           | Encuestas Telefónicas de Alta Frecuencia (HFPS)                                       | Teléfono               |
| **Perú**              | Encuesta Nacional de Hogares (ENAHO)                                                  | Personalmente          |
| **Perú**              | Encuesta Dirigida a la Población Venezolana (ENPOVE)                                  | Personalmente          |

# ¿Cómo analizar datos de encuestas utilizando soluciones de código abierto?

Los datos de las encuestas tienen características únicas que los distinguen de otras fuentes de datos. Se asigna un peso a cada observación, lo que permite hacer inferencias a partir de una muestra limitada y sesgada. Los valores ponderados son cruciales para hacer una inferencia de la muestra (venezolanos y anfitriones que respondieron a las encuestas) a la población (todos los venezolanos y anfitriones).

Aunque el software propietario analiza encuestas ponderadas con interfaces gráficas, las herramientas de código abierto presentan más desafíos para los principiantes. El enfoque más común requiere conocimiento de [lenguajes de programación como R](https://www.r-project.org/), que está diseñado para análisis estadístico y ofrece una variedad de formas de analizar datos de encuestas. Si no está familiarizado con R, puede descargar [RStudio](https://posit.co/download/rstudio-desktop/) y usar un [video introductorio](https://www.youtube.com/watch?v=TexeDzmlQiY) para instalarlo y ejecutar sus primeros códigos R.

# Analizando los datos usando R

Los ejemplos a continuación usan R para realizar un análisis básico sobre los microdatos en el informe [**Venezolano en Chile, Colombia, Ecuador y Perú**](https://www.jointdatacenter.org/venezuela-migration-report/).

Diferentes estilos representan el código R y sus salidas. Por ejemplo, el código con un comando [`print`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/print) a continuación muestra el mensaje citado como salida.

```{r}
print("Coding is easy!")
```

## Cargar bibliotecas

Primero, cargaremos las bibliotecas necesarias para nuestra guía usando el comando biblioteca. Explicamos el objetivo principal de cada uno a través de comentarios colocados después del hashtag (#).

```{r}
#| output: false
library(survey) # para manejar los pesos de la encuesta
library(tidyverse) # para manipular datos fácilmente
library(visdat) # para visualizar los valores faltantes
library(knitr) # para formatear bien la salida
```

## Cómo leer los datos

Para leer los datos de la encuesta e inspeccionar la información disponible, utilizamos el conjunto de datos de Ecuador como ejemplo.

```{r}
file_name = "ecu_host_mig.csv" 

survey = read.csv(file_name)
```

Todos los conjuntos de datos y diccionarios de datos están disponibles en nuestro sitio web: <https://www.jointdatacenter.org/venezuelan-migration-data/>

Para elegir un país que no sea Ecuador, descargue el archivo CSV, guárdelo en la misma carpeta que su script R y reemplace el nombre del archivo en el código anterior.

En la segunda línea del bloque de código anterior, el comando [`read.csv`](https://www.rdocumentation.org/packages/qtl2/versions/0.32/topics/read_csv) carga los datos en la URL o archivo especificado anteriormente.

A seguir, verifique el número de filas (observaciones), columnas (variables), sus respectivos tipos de datos y algunos valores de muestra.

```{r}

str(survey) # mostra la eSTRuctura de la encuesta

```

Los resultados muestran que hay `r nrow(survey)` rows and r ncol(survey) . El resultado también muestra los nombres de las columnas después del signo de dólar, el tipo de datos (int y num para valores numéricos, chr para cadenas de texto) y los valores de las primeras filas.

Las variables a las que les faltan valores están representadas por NA para variables numéricas y comillas vacías para categóricas.

La función str() proporciona un resumen conciso del conjunto de datos, mostrando su tipo de datos, dimensiones y contenido.

## Análisis preliminar

Para entender cómo está estructurado el archivo de cada país, revise algunas variables principales. Puede encontrar descripciones detalladas para todas las variables disponibles en los [diccionarios de datos](https://www.jointdatacenter.org/venezuelan-migration-data/).

-   `survey`: el nombre de la encuesta;

-   `wave`: la ronda de la encuesta. Las encuestas pueden tener más de una ronda. Cada ronda se recoge en un período de tiempo distinto.

-   `samp`: indica si la respuesta proviene de la población venezolana o de acogida;

-   `weight`: el peso asignado a cada registro para producir estimaciones;

Cada archivo agrega diferentes encuestas del mismo país. Por lo tanto, debes utilizar las variables `survey` y `wave` para filtrar los datos y elegir la fuente correcta. Debido a que distintas encuestas cubren diferentes preguntas, a algunos registros les faltan valores.

### Cómo inspeccionar valores faltantes

Para identificar la información faltante, vamos visualizar los valores para cada columna y encuestas. El gráfico muestra más registros de la encuesta *Encuesta de personas en Movilidad y Comunidades de Acogida* (EPEC) que *Encuestas Telefónicas de Alta Frecuencia* (HFPS). Las regiones resaltadas facilitan la identificación de qué variables tienen valores faltantes.

Utilizamos la función `vis_miss()` para visualizar datos faltantes en un conjunto de datos. Definimos los datos como primer parámetro y una columna para agrupar (*facet*) las observaciones.

```{r, fig.width=9}
visdat::vis_miss(survey,facet = survey)
```

Para simplificar, analizaremos solo información sobre edad, estado civil, región y tipo de población (anfitriona o venezolana) en la encuesta HPFS. Como muestra la imagen, a estas variables no les faltan valores.

Los valores faltantes son cruciales para la fase de preparación de datos. Es posible que deba descartar los valores faltantes o imputar valores para realizar algunas análisis. La estrategia que elija depende de por qué faltan valores, la cantidad de valores faltantes y sus objetivos analíticos. Consulte el diccionario de datos y la documentación para comprender los motivos de los valores faltantes.

### Registros por encuestas y rondas

Antes de aplicar los pesos, verificaremos el número total de encuestados por encuesta, ronda y población.

La función `group_by` se utiliza para agrupar datos por una o más variables. Este comando no cambia los datos, solo establece una nueva configuración para operaciones posteriores dentro de cada grupo. La función de resumen se utiliza para calcular estadísticas o métricas resumidas para cada grupo. Finalmente, la función `kable()` presenta el resultado mejor que la salida estándar.

```{r}
summary_df <- survey %>% 
  group_by(survey, wave, samp) %>% 
  summarise(total = n(), .groups = 'drop')

```

```{r}
# Show the table
kable(summary_df, caption = "Number of records by survey, wave and population")

```

Hasta ahora, el conjunto de datos refleja el número de respuestas de una muestra no ponderada de la población venezolana y anfitriona. A continuación, demostramos cómo usar los pesos para calcular estimaciones representativas.

## Configurar el diseño de la encuesta

Como las diferentes encuestas presentan preguntas distintas, seleccione la encuesta de acuerdo con los objetivos de su análisis. La mayoría de los indicadores de Ecuador provienen del HFPS, excepto los referentes a ocupaciones laborales y seguros de salud, que provienen de la encuesta EPEC.

Seleccione la encuesta HFPS para calcular y comparar la edad promedio de la población venezolana y de acogida en Ecuador. Comencemos a filtrar el conjunto de datos para obtener solo observaciones del HFPS usando la función [`filter()`](https://www.rdocumentation.org/packages/dplyr/versions/0.7.8/topics/filter).

```{r}
survey_filter <- survey %>% 
  filter(survey == "HFPS")

```

A continuación, cargamos el diseño de la encuesta y los pesos asociados a cada respuesta. Hay una variedad de formas de implementar el análisis de datos ponderados usando R. Para mayor comodidad, usamos la función [`svydesign`](https://www.rdocumentation.org/packages/survey/versions/4.4-1/topics/svydesign) de la biblioteca [`survey`](https://cran.r-project.org/package=survey), un paquete de R con funciones prediseñadas diseñadas para el análisis de encuestas. Permite especificar parámetros de diseño de encuestas, como ponderaciones muestrales.

```{r}
survey_ecu <- svydesign(ids = ~1, # ~1 means the survey has no clusters
                       data= survey_filter, 
                       weights = survey_filter$weight)

```

## 

## Estadísticas descriptivas

Crear estadísticas resumidas básicas utilizando la biblioteca `survey` es sencillo. Nuestro tutorial muestra cómo agrupar observaciones y analizar variables numéricas y categóricas. Si agrupa por región (la columna `code_province`), tenga en cuenta que las ponderaciones no están destinadas a este nivel de desagregación y que las estimaciones pueden no reflejar con precisión las características de estas poblaciones en cada región.

### Valores numéricos

La función [`svyby`](https://www.rdocumentation.org/packages/survey/versions/4.2-1/topics/svyby) se utiliza para aplicar una función a subconjuntos de datos de encuesta definidos por una o más variables. Lo usaremos para agrupar los registros por tipo de población (`~samp`) y calcular la edad media ([`svymean`](https://www.rdocumentation.org/packages/survey/versions/2.8-1/topics/surveysummary)).

El resultado muestra la media y el error estándar (`se`) para cada estimación. Los valores de error estándar utilizan la misma unidad de medida que la media. Representan cuánto se espera que varíe la media muestral calculada de la media poblacional real.

```{r}
# Group by and calculate the mean age
svyby(formula = ~age, by = ~samp, design = survey_ecu, svymean)

```

### Variables categóricas

La función `svytable` se utiliza para crear tablas de contingencia para datos de encuestas, teniendo en cuenta características del diseño de la encuesta, como las ponderaciones muestrales. A continuación, lo utilizamos para analizar el estado civil.

Usando [`prop.table(crosstab, 1)`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/prop.table), presentamos los valores como porcentajes del nivel de población/fila (usar 0 en lugar de 1 en el comando sumaría los valores a 100 en todas las columnas). Además, redondeamos los valores a dos decimales con [`round()`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/Round).

```{r}
# Cross-tabulates values
crosstab <- svytable(~samp + marital_status, design = survey_ecu)

```

```{r}
# Calculate percentages
crosstab_percentages <- round(prop.table(crosstab,1) * 100,2) 
 
```

```{r}
# Show the table
knitr::kable(crosstab_percentages, 
             caption = "Crosstab of Occupation by Marital Status (%)")

```

# Conclusión

Esta guía ha ofrecido una visión de los pasos iniciales para aprovechar las herramientas de código abierto para analizar datos de encuestas. Si bien hemos cubierto técnicas esenciales, el alcance para una exploración más profunda es vasto.

Le invitamos a compartir otras soluciones de código abierto para analizar datos de encuestas ponderadas o sugerir temas para futuras guías sobre datos de desplazamiento forzado. Contáctenos por correo electrónico o redes sociales ([Twitter](https://twitter.com/jointdatacenter) y [LinkedIn](https://www.linkedin.com/company/joint-data-center/)).

# Recursos adicionales

<https://github.com/pewresearch/pewmethods>: Paquete R desarrollado por el equipo de métodos del Centro de Investigaciones Pew para trabajar con datos de encuestas.

<https://github.com/quantipy/quantipy3/>: Paquete de Python para leer datos de encuestas.
